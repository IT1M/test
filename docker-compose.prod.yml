version: '3.8'

services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saudi-mais-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - saudi-mais-network
    volumes:
      - app-data:/app/data
      - ./logs:/app/logs

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: saudi-mais-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: saudi_mais_inventory
      POSTGRES_USER: saudi_mais_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - saudi-mais-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: saudi-mais-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - saudi-mais-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: saudi-mais-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - saudi-mais-network

volumes:
  postgres-data:
  redis-data:
  app-data:
  nginx-logs:

networks:
  saudi-mais-network:
    driver: bridge